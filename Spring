NEW PROJECT > Spring Legacy > Spring MVC Project 

프로젝트 세팅
Properties > 
1. JavaBuilePath > jre를 jdk로 변경 

2. Project Facets > Runtimes Tomcat 변경 

3. Pom.xml 설정 (Pom.xml은 메이븐설정 메이븐은 Pom.xml에 명시된 dependency가 현재 프로젝트 lib에 있는지 확인)

4. web.xml 설정 

5. servlet-context.xml > mvc-servlet.xml // root-context.xml > context-main.xml 이름 변경 

6. java Resource - src/main/resources 경로에 srping 폴더 생성 

7. 5번에서 변경한 파일들 spring 폴더로 이동 후 삭제.

8. mvc-servlet.xml 설정 (com.study 하위 패키지를 스캔, @Controller만 찾아서 Bean 등록 하도록 설정)

9. context-main.xml 설정 (com.study 하위 패키지를 스캔, @Controller 제외 나머지 @을 Bean 등록, mybatis도 설정)

10. spring 폴더와 같은 위치에 mybatis 폴더 생성, mybatis 폴더 안에 설정에 관한 appconfig.properties 만들기

11. mybatis 폴더에 mybatis-config.xml 추가 (context-main에서 기입한 mybatis 설정대로 관련 파일 만듬) 

12. mybatis 폴더 안에 mapper 폴더 생성 

13. mapper 폴더 안에 xml 생성 (여기선 freeBoard.xml 생성)

14. VO생성 (toString, get/setter) 여기 까지 했으면 Controller, DB연결&쿼리 수행할 Dao, xml 파일 마지막으로 View  

15. Dao "인터페이스" 생성 후 @Mapper 

16. Dao의 쿼리문을 실행할 xml에 Dao에 맞는 쿼리문 작성 (13.에서 생성한xml파일, namespace Dao경로에 맞게 설정)

17.  요청을 받아 처리할 Controller 만들고 Serivce 혹은 Dao @Inject (소규모 일 때는 Service 없어도 됨)

18. Controller에 @RequestMapping, 파라미터에 @ModelAttribute = 객체 끼리 비교 해야할 때 사용 (비밀번호가 맞는지) form에 만들어져있는 필드변수들로 객체를 새로 만들어서 가지고 있을 수 있음 

19. JSP 만들기


