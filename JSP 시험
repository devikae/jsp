[문항1] 전자정부 표준프레임워크에서 효율적인 기반 시스템의 구축 운영을 통해 서비스
품질 및 투자 효율의 기반을 지원하기 위해 공통 컴포넌트를 제공하고 있다. 아래에서 제시한 컴포넌트 계층의 주요 역할을 기술하시오

업무 처리 계층 :
연계 통합 계층 :

[문항2] 요구사항 개발 프로세스의 각 단계를 구분하여 설명 하시오
정답: 요구사항 도출 > 요구사항 분석 > 요구사항 명세 > 요구사항 확인
도출 : 소프트웨어 개발 생명 주기(SDLC) 동안 지속적으로 반복, 인터뷰, 설문, 브레인스토밍 등을 통해 요구사항 도출
분석 : 사용자의 요구사항 중 명확하지 않거나 모호하여 이해되지 않는 부분을 발견하고 이를 걸러내기 위한 과정
명세 : 분석된 요구사항을 바탕으로 모델을 작성하고 문서화하는 것을 의미
확인 : 요구사항 명세서가 정확하고 완전하게 작성되었는지 검토


[문항3] 유즈케이스의 분석 클래스검증에서 역학구분에 대한 내용을 기술하시오
경계(Boundrary) : 시스템과 외부 액터와의 상호작용을 담당하는 클래스

앤티티(Entity) : 시스템이 유지해야하는 정보를 관리하는 기능을 전담하는 클래스

제어 (Control) : 시스템이 제공하는 기능의 로직 및 제어를 담당하는 클래스


[문항1] 웹 애플리케이션 개발환경 중 WAS(Web Application Server)에 대해 기술하시오. 
정답 :WAS =  Web Server + Web Container DB 조회나 다양한 로직 처리를 요구하는 동적인 컨텐츠를 제공하기 위해 만들어진 Application Server

[문항2] JSP 페이지의 구성 요소 중 디렉티브, 스크립트릿, 표현식에 대해 각각 기술하시오.
정답 : 디렉티브 : <%@ %> JSP 페이지에 대한 설정 정보를 지정
       스크립트릿 :  <% %>  jsp 페이지에서 자바 코드를 실행할 때 사용하는 코드 블록 
       표현식 :  <%= %> 결과값 출력

[문항3] request 기본 객체에 대한 기능을 간략히 설명하시오. 
정답 : 1. 클라이언트가 전송한 요청 파라미터, 헤더, 쿠키 읽기 가능 
      2. 속성 처리 기능
      3. 서버와 관련된 정보, 웹브라우저와 관련된 정보 읽기 가능    


[문항4] HTTP 전송 방식 중 GET 방식과 POST 방식의 차이점을 기술하시오.
정답 : GET 방식: 쿼리문자열 사용, 파라미터값의 길이제한이 있을 수 있다.
      POST 방식: 데이터 영역 이용 쿼리문자열 X, 파라미터 길이에 제한X 

[문항5] 웹 어플리케이션의 4가지 영역(scope)인 PAGE, REQUEST, SESSION, APPLICATION
영역에 대해 기술하시오.
 정답 :   1. page scope - 하나의 JSP 페이지에서만 사용할 수 있는 영역             (pageContext 기본 객체)
        2. request scope - 하나의 요청[request]에서만 사용할 수 있는 영역      (request 기본 객체)
        3. session scope - 하나의 웹 브라우저에서 사용할 수 있는 영역            (session 기본 객체)
        4. application scope - 웹 어플리케이션(웹사이트) 영역                  (application 기본 객체)

[문항6] 쿠키(Cookie)와 세션(session)에 대해 설명하시오. 
정답 : 
 쿠키란? 쿠키는 클라이언트(브라우저) 로컬에 저장되는 키와 값이 들어있는 작은 데이터 파일입니다.
클라이언트가 페이지 요청 
서버에 쿠키 생성
HTTP헤더에 쿠키 포함시켜 응답
브라우저가 종료되어도 기간 동안 보관됨
같은 요청을 할 경우 HTTP헤더에서 쿠키를 같이 보냄 

방문 사이트에서 로그인 시, "아이디와 비밀번호를 저장하시겠습니까?" 이용 


 세션이란? 세션은 쿠키를 기반하고 있지만, 사용자 정보 파일을 브라우저에 저장하는 쿠키와 달리 세션은 서버 측에서 관리
클라이언트가 서버 접속시 세션ID 발급받음
세션ID에 대해 쿠키를 사용하고 저장해서 가지고있음
서버에 요청할 때 쿠키의 세션ID를 같이 서버에 전달해서 요청

각 클라이언트에게 고유 ID를 부여
사용자가 많아질수록 서버 메모리를 많이 차지하게 됨
세션 ID로 클라이언트를 구분해서 클라이언트의 요구에 맞는 서비스를 제공

[문항7] MVC 패턴의 구성 요소인 모델, 뷰, 컨트롤러에 대해 설명하시오. 
정답 :
    M: MODEL 애플리케이션의 정보, 데이터를 나타낸다
    V: VIEW  데이터 및 객체의 입력, 그리고 보여주는 출력을 담당
    C: CONTROLLER 사용자가 데이터를 클릭하고, 수정하는 것에 대한 "이벤트"들을 처리하는 부분

[문항8] DI(Dependency Injection)에 대해서 설명하시오.
정답 : DI(의존관계 주입)는 객체가 의존하는 또 다른 객체를 외부에서 선언하고 이를 주입받아 사용하는 것.
    

[문항9] AOP(Aspect Oriented Programming)에 대해서 설명하시오. 
정답 :핵심적인 관점, 부가적인 관점으로 나눠보고 그 관점을 기준으로 각각 모듈화 하겠다는 의미.
핵심적인 관점: 개발자가 적용하고자 하는 핵심 비즈니스 로직.
부가적인 관점: 핵심 로직을 수행하기 위해 필요한 DB연결(JDBC), 로깅, 파일 입출력 등...

[문항10] Spring MVC의 기본 아키텍처에 대해서 설명하시오.
정답 :사용자 입력은 컨트롤러에 들어옴
     컨트롤러는 모델을 업데이트,나타내줄 뷰를 선택
     뷰는 모델을 이용하여 화면을 나타냄

[문항1] UML 모델에의 시퀀스 다이어그램에 대해서 기술하시오.
정답 :   특정 행동이 어떠한 순서로 어떤 객체와 어떻게 상호작용을 하는지 표현하는 행위 다이어그램

[문항2] 디자인 패턴의 종류에 대해서 간략하게 기술하시오
생성 패턴(Creational Pattern) : 객체의 생성에 관련된 패턴으로 객체의 생성절차를 추상화하는 패턴

구조 패턴(Structural Pattern) : 클래스나 객체를 조합해 더 큰 구조를 만드는 패턴

행위 패턴(Behavioral Pattern) : 요청 처리 객체가 둘 이상 존재하여 한 객체가 처리하지 못하면 다음 객체로 넘어가 처리하는 패턴

[문항3] SW개발에서 5가지 계층적(Layer) 아키텍처를 많이 사용한다. 각 계층명과 역할을 간략하게 기술하시오
정답 : 1. MVC pattern : 모델, 뷰, 컨트롤러가 분리된 구조 >> 데이터를 보여주고 상호작용하는 방법이 여러가지일 때 사용 
      2. Layered  : 시스템을 계층으로 구성하고 각 계층은 관련된 기능을 수행 >> 새로운 기능을 기존 시스템 위에 구축할 때
      3. Repository : 시스템의 모든 데이터는 중앙 저장소에서 관리, 모던 컴포넌트들이 중앙저장소 접근 가능, 컴포넌트들은 저장소를 
                                        통해서만 상호작용 >> 장기간 저장돼야하는 대량의 정보를 생성하는 시스템을 갖고있을 때
       4. Client-server : 각 서비스가 독립적인 서버에 의해 제공되는 서비스들의 집합 >> 공유 데이터베이스에 있는 데이터들을 여러
                            지역에서 접근     
        5. Pipe and Filter : 데이터 처리를 위해 한 컴포넌트에서 다른 컴포넌트로 순차적흐름 >> 순차적으로 데이터 처리를 해야 할 때       
    




